/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NOSQLView.java
 *
 * Created on 2012-02-28, 20:44:19
 */
package nosql;

import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.table.TableColumn;

/**
 *
 * @author Rafal Tkaczyk
 */
public class NoSQLView extends javax.swing.JFrame {

    private DataTableModel model;
    private MongoDB mongo;
    private RMySQL sql;
    private CSVtoJSON csvToJson;
    
    /** Creates new form NOSQLView */
    public NoSQLView() {
	Image image = Toolkit.getDefaultToolkit().getImage("src/icons/icon.png");
	this.setIconImage(image);
	model = new DataTableModel();
	initComponents();
	initConnections();
	initTableModel();
    }
    
    private void initConnections(){
	mongo = new MongoDB();
        sql = new RMySQL();
        csvToJson = new CSVtoJSON();
    }
    
    private void initTableModel(){
	TableColumn col;
	col = table.getColumnModel().getColumn(0);
	col.setPreferredWidth(44);
	col.setMaxWidth(44);
	col = table.getColumnModel().getColumn(1);
	col.setPreferredWidth(120);
	col.setMaxWidth(120);
	col = table.getColumnModel().getColumn(2);
	col.setPreferredWidth(120);
	col.setMaxWidth(120);
	col = table.getColumnModel().getColumn(3);
	col.setPreferredWidth(100);
	col.setMaxWidth(100);
	col = table.getColumnModel().getColumn(4);
	col.setPreferredWidth(120);
	col.setMaxWidth(400);
	col = table.getColumnModel().getColumn(5);
	col.setPreferredWidth(80);
	col.setMaxWidth(80);
	col = table.getColumnModel().getColumn(6);
	col.setPreferredWidth(170);
	col.setMaxWidth(1000);
	col = table.getColumnModel().getColumn(7);
	col.setPreferredWidth(100);
	col.setMaxWidth(100);
	col = table.getColumnModel().getColumn(8);
	col.setPreferredWidth(80);
	col.setMaxWidth(80);
	col = table.getColumnModel().getColumn(9);
	col.setPreferredWidth(90);
	col.setMaxWidth(90);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPaneTable = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        toolbar = new javax.swing.JToolBar();
        labelIconSQL = new javax.swing.JLabel();
        buttonShowAllSQL = new javax.swing.JButton();
        buttonAddSQL = new javax.swing.JButton();
        buttonDeleteSQL = new javax.swing.JButton();
        buttonExpSQL = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(50, 0), new java.awt.Dimension(50, 0), new java.awt.Dimension(50, 32767));
        labelIcinMongoDB = new javax.swing.JLabel();
        buttonShowAllMongo = new javax.swing.JButton();
        buttonAddMongo = new javax.swing.JButton();
        buttonDeleteMongo = new javax.swing.JButton();
        buttonExpMongo = new javax.swing.JButton();
        buttonUFO = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(50, 0), new java.awt.Dimension(50, 0), new java.awt.Dimension(50, 32767));
        buttonCsvJson = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(model);
        scrollPaneTable.setViewportView(table);

        toolbar.setFloatable(false);
        toolbar.setRollover(true);

        labelIconSQL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/mysql_icon.png"))); // NOI18N
        labelIconSQL.setText(":");
        labelIconSQL.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 6, 1, 1));
        toolbar.add(labelIconSQL);

        buttonShowAllSQL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/database_refresh.png"))); // NOI18N
        buttonShowAllSQL.setFocusable(false);
        buttonShowAllSQL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonShowAllSQL.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonShowAllSQL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonShowAllSQLMousePressed(evt);
            }
        });
        toolbar.add(buttonShowAllSQL);

        buttonAddSQL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/database_add.png"))); // NOI18N
        buttonAddSQL.setFocusable(false);
        buttonAddSQL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonAddSQL.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonAddSQL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonAddSQLMousePressed(evt);
            }
        });
        toolbar.add(buttonAddSQL);

        buttonDeleteSQL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/database_delete.png"))); // NOI18N
        buttonDeleteSQL.setFocusable(false);
        buttonDeleteSQL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonDeleteSQL.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonDeleteSQL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonDeleteSQLMousePressed(evt);
            }
        });
        toolbar.add(buttonDeleteSQL);

        buttonExpSQL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/json_file.png"))); // NOI18N
        buttonExpSQL.setFocusable(false);
        buttonExpSQL.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonExpSQL.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonExpSQL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonExpSQLMousePressed(evt);
            }
        });
        toolbar.add(buttonExpSQL);
        toolbar.add(filler1);

        labelIcinMongoDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/mongodb.png"))); // NOI18N
        labelIcinMongoDB.setText(":");
        labelIcinMongoDB.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 6, 1, 1));
        toolbar.add(labelIcinMongoDB);

        buttonShowAllMongo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/database_refresh.png"))); // NOI18N
        buttonShowAllMongo.setFocusable(false);
        buttonShowAllMongo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonShowAllMongo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonShowAllMongo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonShowAllMongoMousePressed(evt);
            }
        });
        toolbar.add(buttonShowAllMongo);

        buttonAddMongo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/database_add.png"))); // NOI18N
        buttonAddMongo.setFocusable(false);
        buttonAddMongo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonAddMongo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonAddMongo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonAddMongoMousePressed(evt);
            }
        });
        toolbar.add(buttonAddMongo);

        buttonDeleteMongo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/database_delete.png"))); // NOI18N
        buttonDeleteMongo.setFocusable(false);
        buttonDeleteMongo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonDeleteMongo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonDeleteMongo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonDeleteMongoMousePressed(evt);
            }
        });
        toolbar.add(buttonDeleteMongo);

        buttonExpMongo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/json_file.png"))); // NOI18N
        buttonExpMongo.setFocusable(false);
        buttonExpMongo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonExpMongo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonExpMongo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonExpMongoMousePressed(evt);
            }
        });
        toolbar.add(buttonExpMongo);

        buttonUFO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icon.png"))); // NOI18N
        buttonUFO.setFocusable(false);
        buttonUFO.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonUFO.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonUFO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonUFOMousePressed(evt);
            }
        });
        toolbar.add(buttonUFO);
        toolbar.add(filler2);

        buttonCsvJson.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/csvTojason.png"))); // NOI18N
        buttonCsvJson.setFocusable(false);
        buttonCsvJson.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonCsvJson.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        buttonCsvJson.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                buttonCsvJsonMousePressed(evt);
            }
        });
        toolbar.add(buttonCsvJson);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneTable, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
            .addComponent(toolbar, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneTable, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void buttonShowAllMongoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonShowAllMongoMousePressed
    model.setValueAt(mongo.findAll());
}//GEN-LAST:event_buttonShowAllMongoMousePressed

private void buttonAddMongoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAddMongoMousePressed
    mongo.loadDataFromFile("ufo.us.json");
}//GEN-LAST:event_buttonAddMongoMousePressed

private void buttonDeleteMongoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonDeleteMongoMousePressed
    mongo.removeAll();
}//GEN-LAST:event_buttonDeleteMongoMousePressed

private void buttonExpMongoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExpMongoMousePressed
    mongo.exportToJson();
}//GEN-LAST:event_buttonExpMongoMousePressed

private void buttonUFOMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonUFOMousePressed
    ArrayList<MRresult> mapreduce = mongo.map_reduce();
    
    JFrame frame = new JFrame("UFO Map Reduce");
    MapReduceView panel = new MapReduceView(mapreduce);
    frame.add(panel);
    frame.pack();
    frame.setVisible(true);
    frame.setResizable(false);
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
}//GEN-LAST:event_buttonUFOMousePressed

private void buttonCsvJsonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCsvJsonMousePressed
    csvToJson.convert("ufo.us.csv");
}//GEN-LAST:event_buttonCsvJsonMousePressed

private void buttonShowAllSQLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonShowAllSQLMousePressed
    ArrayList<Event> temp = sql.findAll();
    if(temp.size() > 0) {
        model.setValueAt(temp);
    }
}//GEN-LAST:event_buttonShowAllSQLMousePressed

private void buttonAddSQLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAddSQLMousePressed
    sql.loadDataFromFile("ufo.us.json");
}//GEN-LAST:event_buttonAddSQLMousePressed

private void buttonDeleteSQLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonDeleteSQLMousePressed
    sql.removeAll();
}//GEN-LAST:event_buttonDeleteSQLMousePressed

private void buttonExpSQLMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExpSQLMousePressed
    sql.exportToJson();
}//GEN-LAST:event_buttonExpSQLMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
	/* Set the Nimbus look and feel */
	//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
	 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
	 */
	try {
	    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
		if ("Nimbus".equals(info.getName())) {
		    javax.swing.UIManager.setLookAndFeel(info.getClassName());
		    break;
		}
	    }
	} catch (ClassNotFoundException ex) {
	    java.util.logging.Logger.getLogger(NoSQLView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (InstantiationException ex) {
	    java.util.logging.Logger.getLogger(NoSQLView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (IllegalAccessException ex) {
	    java.util.logging.Logger.getLogger(NoSQLView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	} catch (javax.swing.UnsupportedLookAndFeelException ex) {
	    java.util.logging.Logger.getLogger(NoSQLView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
	}
	//</editor-fold>

	/* Create and display the form */
	java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
	    public void run() {
		new NoSQLView().setVisible(true);
	    }
	});
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddMongo;
    private javax.swing.JButton buttonAddSQL;
    private javax.swing.JButton buttonCsvJson;
    private javax.swing.JButton buttonDeleteMongo;
    private javax.swing.JButton buttonDeleteSQL;
    private javax.swing.JButton buttonExpMongo;
    private javax.swing.JButton buttonExpSQL;
    private javax.swing.JButton buttonShowAllMongo;
    private javax.swing.JButton buttonShowAllSQL;
    private javax.swing.JButton buttonUFO;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel labelIcinMongoDB;
    private javax.swing.JLabel labelIconSQL;
    private javax.swing.JScrollPane scrollPaneTable;
    private javax.swing.JTable table;
    private javax.swing.JToolBar toolbar;
    // End of variables declaration//GEN-END:variables
}
